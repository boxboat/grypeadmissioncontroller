name: cron

on:
  schedule:
    - cron: '5 3 * * *'

jobs:
  build:
    name: Automated version refresher
    runs-on: ubuntu-latest
    steps:
      - name: Get their version
        run: |
          THEIR_VERSION=$(curl -s "https://api.github.com/repos/anchore/grype/releases/latest" | grep "browser_download_url" | cut -d '"' -f 4 | cut -f 8 -d \/ | uniq)
          echo THEIR_VERSION=$THEIR_VERSION >> $GITHUB_ENV
      - name: Get our version
        run: |
          OUR_VERSION=$(cat Dockerfile | grep install.sh | awk '{print $NF}')
          echo OUR_VERSION=$OUR_VERSION >> $GITHUB_ENV
      - name: Compare the versions and freshen if need be
        run: |
          THEIR_VERSION=${{ env.THEIR_VERSION }}
          OUR_VERSION=${{ env.OUR_VERSION }}
          if [ "$THEIR_VERSION" = "$OUR_VERSION" ]; then echo no newer version found; else sed -i '/install.sh/ s/'$OUR_VERSION'/'$THEIR_VERSION'/' ./Dockerfile ; echo FRESHEN=true >> $GITHUB_ENV fi
      - name: Freshen if need be
        if: ${{ env.FRESHEN }}
        run: |
          git checkout -b freshen; git commit -am 'autorefreshen process'; git push --set-upstream origin freshen fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Pull Request
        if: ${{ env.FRESHEN }}
        uses: peter-evans/create-pull-request@v3
        id: cpr
        with:
          commit-message: automatic update
          title: Automatic Update
          body: The cronjob detected that grype had a release and is updating dependencies
          branch: freshen
          base: main
          delete-branch: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: merge the pull request
        if: ${{ env.FRESHEN }}
        uses: juliangruber/merge-pull-request-action@v1
        with:
          number: ${{ steps.cpr.outputs.pull-request-number }} 
          method: squash
          repo: boxboat/grypeadmissioncontroller
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}